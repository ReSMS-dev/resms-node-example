// src/error.ts
var ReSMSError = class extends Error {
  constructor(name, message) {
    super();
    this.name = name;
    this.message = message;
  }
  toString() {
    return JSON.stringify({
      message: this.message,
      name: this.name
    });
  }
};

// src/otp/otp.ts
var Otp = class {
  constructor(resms) {
    this.resms = resms;
  }
  async send(sendOtpOptions) {
    return await this.resms.post("/otp", sendOtpOptions);
  }
  async verify(verifyOtpOptions) {
    return await this.resms.post(
      "/otp/verify",
      verifyOtpOptions
    );
  }
};

// src/sms/sms.ts
var Sms = class {
  constructor(resms) {
    this.resms = resms;
  }
  async send(sendSmsOptions) {
    return await this.resms.post("/sms", sendSmsOptions);
  }
};

// src/resms.ts
var baseUrl = "https://api.resms.dev";
var ReSMS = class {
  constructor(key) {
    this.key = key;
    this.headers = new Headers({
      "X-Api-Key": this.key,
      "Content-Type": "application/json"
    });
  }
  headers;
  sms = new Sms(this);
  otp = new Otp(this);
  async fetchRequest(path, options = {}) {
    const response = await fetch(`${baseUrl}${path}`, options);
    return await this.handleResponse(response);
  }
  async handleResponse(response) {
    if (!response.ok) {
      const errorResponse = await response.json();
      throw new ReSMSError(
        errorResponse.error.name,
        errorResponse.error.message
      );
    }
    return await response.json();
  }
  async get(path) {
    const requestOptions = {
      method: "GET",
      headers: this.headers
    };
    return this.fetchRequest(path, requestOptions);
  }
  async post(path, payload) {
    const requestOptions = {
      method: "POST",
      headers: this.headers,
      body: JSON.stringify(payload)
    };
    return this.fetchRequest(path, requestOptions);
  }
};

// src/otp/model/send-otp.ts
var OtpCode = /* @__PURE__ */ ((OtpCode2) => {
  OtpCode2[OtpCode2["NUMERIC"] = 0] = "NUMERIC";
  OtpCode2[OtpCode2["ALPHA"] = 1] = "ALPHA";
  return OtpCode2;
})(OtpCode || {});
export {
  OtpCode,
  ReSMS
};
